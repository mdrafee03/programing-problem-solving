Problem: Merge Two Sorted Lists
Description: Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:
Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

Link: https://leetcode.com/problems/merge-two-sorted-lists/

Solution:
#iterative solution
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        p = r = ListNode(0)
        while l1 and l2:
            if l1.val <= l2.val:
                r.next = l1
                l1 = l1.next
            else:
                r.next = l2
                l2 = l2.next
            r = r.next
        r.next = l1 or l2
        return p.next

#Recursive solution
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        
        if not l1 or not l2:
            return l1 or l2
        
        if l1.val < l2.val:
            l1.next = self.mergeTwoLists(l1.next, l2)
            return l1
        else:
            l2.next = self.mergeTwoLists(l1, l2.next)
            return l2
        
        
